---
title: ""
author: ""
email: tomasz.wozniak@unimelb.edu.au
title-slide-attributes:
  data-background-color: "#ededed"
number-sections: false
format:
  revealjs:
    theme:
      - simple
      - theme.scss
    slide-number: c
    transition: concave
    smaller: true
    multiplex: true
execute:
  echo: true
cache: true
---

```{r palette}
#| echo: false
pin <- "#ff68b4"
dar <- "#ededed"
grad <- grDevices::colorRampPalette(c(dar, pin))(5)
```

## {background-color="#ededed"}

![](bsvars.org.png){.absolute top=80 right=725 width="400"}
![](bsvars.png){.absolute top=80 right=325 width="400"}
![](bsvarSIGNs.png){.absolute top=80 right=-75 width="400"}

## bsvars.org design concept {style="color:#ff68b4;"}

### R packages for Predictive Analyses using Bayesian Structural Vector Autoregressions

$$ $$

### by Adam Wang and Tomasz WoÅºniak

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Structural VARs.

- go-to models for the analysis of policy effects
- facilitate the analysis of **dynamic causal effects** of a well-isolated cause
- perfect for **predictive analyses**
- extensively used for: _monetary_ and _fiscal_ policy, _financial_ markets, ...
- extendible:
  - non-normality
  - heteroskedasticity
  - time-varying parameters
  - Bayesian hierarchical modelling

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Structural VARs.

$$
	\begin{align}
		\text{VAR equation: }        &  & y_t                  & = \mathbf{A} x_{t} + \epsilon_t                                                 \\[1ex]
		\text{structural equation: } &  & \mathbf{B}\epsilon_t & = u_t                                                                           \\[1ex]
		\text{structural shocks: }   &  & u_t |Y_{t-1}         & \sim N_N\left(\mathbf{0}_N,\text{diag}\left(\boldsymbol\sigma_t^2\right)\right)
	\end{align}
$$

### Features.

- system dynamic modelling
- structure of the economy modelled by $\mathbf{B}$
- identified structural shocks $u_t$
- time-varying variances

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Model specification.

```{R, echo=FALSE, cache=TRUE}
set.seed(123)

library(bsvarSIGNs)

data <- readxl::read_excel("./VARData.xlsx")
data[, 3:7] <- 100 * log(data[, 3:7]) # log transformation

# endogenous variables
Y <- as.matrix(data[, 2:5])

# exogenous variables
Z <- data[, 6:8] |>
  as.matrix() |>
  bsvars::specify_data_matrices$new(p = 4) # 4 lags
Z <- rbind(matrix(0, 4, 12), t(Z$X[-nrow(Z$X), ])) # pad with zeros

# sign restrictions of +ve monetary policy shock
# restrictions on impulse response functions
sign_irf <- matrix(NA, 4, 4)
sign_irf[1, 1] <- sign_irf[4, 1] <- 1 # +ve impact on cash rate and exchange rate
sign_irf[3, 1] <- -1 # -ve impact on consumer price index
sign_irf <- array(sign_irf, c(4, 4, 4)) # last for 4 periods

# restrictions on policy reaction function
sign_structural <- matrix(NA, 4, 4)
sign_structural[1, ] <- c(1, -1, -1, 1)
```

```{R, cache=TRUE}
sign_irf[, , 1]

sign_structural

# specify the model
spec <- specify_bsvarSIGN$new(
  Y,
  p = 4,
  sign_irf = sign_irf,
  sign_structural = sign_structural
)
```

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

```{R, echo=FALSE, cache=TRUE}
# disable dummy observation priors
spec$prior$Ysoc <- matrix(NA, nrow(spec$prior$Ysoc), 0)
spec$prior$Xsoc <- matrix(NA, nrow(spec$prior$Xsoc), 0)
spec$prior$Ysur <- matrix(NA, nrow(spec$prior$Ysur), 0)
spec$prior$Xsur <- matrix(NA, nrow(spec$prior$Xsur), 0)
```

### Estimation.

```{R, cache=TRUE}
# sample posterior draws
post <- estimate(spec, S = 5000)
```

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Forecasting.

```{R, cache=TRUE}
post |>
  forecast(h = 4) |>
  plot(data_in_plot = 0.1)
```

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Forecast error variance decomposition.

```{R, cache=TRUE}
post |>
  compute_variance_decompositions(h = 20) |>
  plot()
```

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Impulse responses.

```{R, cache=TRUE}
post |>
  compute_impulse_responses(h = 20) |>
  plot(probability = 0.68)
```

## the packages and their working

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

### Historical Decompositions.

```{R, cache=TRUE}
post |>
  compute_historical_decompositions() |>
  plot()
```

## target audience

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

- **academic researchers**

  - reproducibility, transparency, literature context

- **PhD students**

  - communication, extendibility, up-to date with the newest developments

- **master students**

  - simple workflows, documentation and examples, video presentations

- **applied economists**

  - reliability, speed, incorporating feedback on new features

- **economic governance institutions**
  - workflow integration, reporting practices, off-the-shelf applications

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 1. combine the best of two worlds:

-speed of algorithms written using compiled code, **C++**

-convenience of data analysis using interpreted code, **R**

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 2. **C++** implementation using **Rcpp**

- provide essential functionality for package development
- manageable dependencies combined with good communication by developers
- simplicity in package setup/compilation/linking/assuring object compatibility lowering the (perceived) entry requirements
- great community support
- super fast on loops (Gibbs sampler in **bsvars** is a serial job)
- parallel computations using **openMP** (independent sampler in **bsvarSIGNs**)

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 3. Essential algorithms rely on **Armadillo** through **RcppArmadillo**

- frontier package for linear algebra (speed, speed, speed)
- fast and reproducible random number generators
- excellent documentation and support in package development
- makes **C++** code as expressive as **R**'s

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 4. **R6** management of the input object

- minimal scripting `specify_bsvar$new()` provides basic setup of:
  - starting values
  - identification
  - data matrices
  - prior hyper-parameters (each of them are lists with **R6** structure)
- ample modelling choices managed by arguments of `specify_bsvar$new()`
- possibility of coherent customisation using in functions **R6** public elements
- essential specification variables managed by **R6** private elements

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 4. **R6** management of the input object

- R6 is R's object-oriented programming system
- both spec and spec$prior are R6 objects
- modify a public field

```{R}
spec$prior$A[1, 1] <- 0
spec$prior$A
```

- call a public method

```{R}
spec$prior$estimate_hyper()
```

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 5. Establish a set of generics in **bsvars**

- provide model-specific methods in other packages
- assure similar workflows
- implement through `Depends:` and `Imports:`

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 6. `S3` methods

- R's native object-oriented programming system
- simple workflows

```{r simple}
#| eval: false

... |>
  plot()
```

- same method for different objects
- applies to objects generated from both packages **bsvars** and **bsvarSIGNs**

```{r generics}
#| eval: false
bsvars::plot.Forecasts
bsvars::plot.PosteriorFEVD
bsvars::plot.PosteriorIR
bsvars::plot.PosteriorHD
```

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 7. export all **C++** functions in a library

- for developers to access all code for their **R** package development using **C++** code
- implement through `LinkingTo:` and `Depends:`
- pointer management
- assure consistency in object declarations
- assignment by reference not working across packages

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 8. Outputs and workflows to target various users

- provide all the outputs, posterior draws
  - insightful users can can compute demanded quantities not provided in the packages
- provide all the basic functionality with well-designed workflows
  - `plot` and `summary` methods for users valuing simplicity in scripting
  - _It's amazing how much you do with a few lines of code!_

## bsvars.org design concept

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### 9. Extensive resources

- documentation pitched to users of various level of advancement
- **pkgdown** website with package features, social media chanels, and updates on the most recent presentations!
- a vignette to be sent to the _Journal of Statistical Software_ or the _R Journal_

## Student's experience

- make something useful to the world
- collaborate and learn from others
- gain programming experience (especially in C++)
- adds competency to the CV
- being a package developer is fun!

## future developments

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### bsvars and bsvarSIGNs

- **bsvars** include more models non-normal and heteroskedastic
- **bsvars** provide computations for more outputs (cummulative IRF and HD, connectedness measures)
- **bsvars** include more model verification techniques
- **bsvarSIGNs** include COVID modelling
- **bsvarSIGNs** implement parallel computations for independence sampler
- **bsvarSIGNs** improve hyperparameter estimation
- **bsvarSIGNs** implement some user-demanded features
- **bsvars** and **bsvarSIGNs** JSS submissions
- **bsvars** and **bsvarSIGNs** forecasting performance evaluation **??**

## future developments

::: footer
[bsvars.org design concept](https://bsvars.org/2025-06-iifosf/)
:::

$$ $$

### upcoming packages

- **bvarPANELs** - Bayesian Panel VAR forecasting of labour market outcomes for the International Labour Organization
- **bsvarTVPs** with Annika Camehl - Time-varying identification of Structural VARs as an extension to **bsvars**
- **bsvarCFs** with Dan Zhu - Bayesian forecasting with VARs subject to soft and hard restrictions as an extension to **bsvars** and **bsvarSIGNs**
- **bvarGIGs** with Rui Liu and Andres Ramirez Hassan - Bayesian forecasting with VARs with flexible shrinkage
- **bsmars** with Loncan Li - Bayesian forecasting with Matrix Autoregression

## {background-color="#ededed"}

![](social.png){.absolute top=10 right=10 width="1000"}
